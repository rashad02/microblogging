{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport default function useToken() {\n  _s();\n\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  };\n\n  const [token, setToken] = useState(getToken());\n  console.log(\"token: \", token);\n\n  const saveToken = userToken => {\n    console.log(\"userToken: \", userToken);\n    localStorage.setItem('token', userToken);\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  };\n}\n\n_s(useToken, \"YxmPjHzwYO/ewBTUGNAd/YBNtug=\");","map":{"version":3,"sources":["E:/Workspace.it/microblogging/src/token.js"],"names":["useState","useToken","getToken","tokenString","localStorage","getItem","userToken","JSON","parse","token","setToken","console","log","saveToken","setItem"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB;AACA,WAAOG,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAEG,KAAlB;AACD,GAJD;;AAMA,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACE,QAAQ,EAAT,CAAlC;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;;AACA,QAAMI,SAAS,GAAGP,SAAS,IAAI;AAC3BK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,SAA3B;AAEFF,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BR,SAA9B;AACAI,IAAAA,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR;AACD,GALD;;AAOA,SAAO;AACLC,IAAAA,QAAQ,EAAEG,SADL;AAELJ,IAAAA;AAFK,GAAP;AAID;;GArBuBR,Q","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  console.log(\"token: \", token);\r\n  const saveToken = userToken => {\r\n      console.log(\"userToken: \", userToken);\r\n\r\n    localStorage.setItem('token', userToken);\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}