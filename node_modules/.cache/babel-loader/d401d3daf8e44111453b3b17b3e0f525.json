{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace.it\\\\microblogging\\\\src\\\\components\\\\landing\\\\sign-in.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { loggedIn } from '../../redux/actions/action.js';\nimport useToken from '../../token.js';\nimport FormInput from '../common-component/form-input.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  logIn\n}) => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const {\n    token,\n    setToken\n  } = useToken();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!(password || email)) {\n      return false;\n    }\n\n    try {\n      let userData = {\n        password,\n        email\n      }; //    if(location.state && location.state.from) {\n      //       this.props.history.push(location.state.from);\n      //    } else {\n      //       this.props.history.push('/');\n      //    }\n\n      await axios({\n        method: \"POST\",\n        url: 'http://localhost:4000/login/',\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          'Content-Type': 'application/json'\n        },\n        data: userData\n      }).then(res => {\n        if (res.data.token) {\n          let userId = res.data.userId;\n          console.log(\"res\", res.data.token);\n          setToken(res.data.token);\n          logIn(userId);\n        }\n      }); // if(token) history.push('/');\n    } catch (e) {\n      console.log(\"Error occurred: \", e);\n    }\n\n    ;\n  };\n\n  const handleChange = (event, type) => {\n    var _event$target;\n\n    let value = (event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value) || \"\";\n    if (type === 'password') setPassword(value);\n    if (type === 'email') setEmail(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-reg-area sign\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"log-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: 'text',\n        value: email,\n        onChange: e => handleChange(e, 'email'),\n        label: 'Email'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: 'password',\n        value: password,\n        handleChange: e => handleChange(e, 'password'),\n        label: 'Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: e => e.target.value,\n            checked: \"checked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"check-box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 98\n          }, this), \"Always Remember Me.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        title: \"\",\n        className: \"forgot-pwd\",\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mtr-btn signin\",\n          type: \"button\",\n          onClick: e => handleSubmit(e),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mtr-btn signup\",\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 76\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"P2lqYSC8d63vZJu4k6Ao6mW3csM=\", false, function () {\n  return [useToken];\n});\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  logIn: id => dispatch(loggedIn(id))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["E:/Workspace.it/microblogging/src/components/landing/sign-in.jsx"],"names":["React","useState","Link","useHistory","Redirect","axios","connect","loggedIn","useToken","FormInput","SignIn","logIn","password","setPassword","email","setEmail","token","setToken","handleSubmit","event","preventDefault","userData","method","url","headers","data","then","res","userId","console","log","e","handleChange","type","value","target","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link, useHistory, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {loggedIn} from '../../redux/actions/action.js';\r\nimport useToken from '../../token.js';\r\nimport FormInput from '../common-component/form-input.jsx';\r\n\r\n\r\n\r\nconst SignIn = ({logIn}) => {\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const { token, setToken } = useToken();\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        if(!(password || email)) {\r\n            return false;\r\n        }\r\n\r\n        try{\r\n            let userData = {\r\n                password,\r\n                email,\r\n            }\r\n            \r\n//    if(location.state && location.state.from) {\r\n//       this.props.history.push(location.state.from);\r\n//    } else {\r\n//       this.props.history.push('/');\r\n//    }\r\n    \r\n            await axios({\r\n                method: \"POST\",\r\n                url: 'http://localhost:4000/login/',\r\n                headers: {\r\n                   \"Access-Control-Allow-Origin\": \"*\",\r\n                   'Content-Type': 'application/json'\r\n                },  \r\n                data: userData\r\n            }).then(res => {\r\n                if(res.data.token) {\r\n                    \r\n                    let userId = res.data.userId;\r\n                     \r\n                    console.log(\"res\", res.data.token);\r\n                    setToken(res.data.token);  \r\n                    logIn(userId);          \r\n                }\r\n            })\r\n    \r\n            \r\n            // if(token) history.push('/');\r\n        \r\n        } catch(e){\r\n            console.log(\"Error occurred: \", e);\r\n        };\r\n        \r\n    };\r\n    const handleChange = (event, type) => {\r\n        let value = event?.target?.value || \"\";\r\n\r\n        if(type === 'password')  setPassword(value);\r\n        if(type === 'email')  setEmail(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-reg-area sign\">\r\n            <h2 className=\"log-title\">Login</h2>\r\n            <>\r\n                <FormInput type={'text'} value={email} onChange= {e =>  handleChange(e, 'email')} label={'Email'}/>\r\n                \r\n                <FormInput type={'password'} value={password} handleChange= {e =>  handleChange(e, 'password')} label={'Password'}/>\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input type=\"checkbox\" onChange={e => e.target.value} checked=\"checked\"/><i className=\"check-box\"></i>Always Remember Me.\r\n                    </label>\r\n                </div>\r\n                <a href=\"#\" title=\"\" className=\"forgot-pwd\">Forgot Password?</a>\r\n                <div className=\"submit-btns\">\r\n                    <button className=\"mtr-btn signin\" type=\"button\" onClick={e =>  handleSubmit(e)}><span>Login</span></button>\r\n                    <button className=\"mtr-btn signup\" type=\"button\"><span><Link to=\"/register\">Register</Link></span></button>\r\n                </div>\r\n            </>\r\n        </div>\r\n\t\t\t\t\t\t\t\t\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logIn: id => dispatch(loggedIn(id))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}