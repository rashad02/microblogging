{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace.it\\\\microblogging\\\\src\\\\components\\\\post\\\\post-list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport ReviewSection from './review-section.jsx';\nimport CommentSection from './comment-section.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Postlist = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(async () => {\n    await axios({\n      method: \"GET\",\n      url: 'http://localhost:4000/post/',\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.data.posts) {\n        let posts = res.data.posts;\n        console.log(\"client posts: \", posts);\n        setPosts(posts);\n      }\n    }).catch(e => {\n      console.log(\"Error occurred: \", e);\n    });\n  }, [setPosts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length ? posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"central-meta item\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friend-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/resources/friend-avatar10.jpg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"ins\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"time-line.html\",\n                title: \"\",\n                children: \"Janice Griffith\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Published: \", moment(post.createdAt).format('MMMM Do YYYY, h:mm:ss A')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"images/resources/user-post.jpg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ReviewSection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 91\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 55\n    }, this)) : null\n  }, void 0, false);\n};\n\n_s(Postlist, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = Postlist;\nexport default Postlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Postlist\");","map":{"version":3,"sources":["E:/Workspace.it/microblogging/src/components/post/post-list.jsx"],"names":["React","useEffect","useState","moment","axios","ReviewSection","CommentSection","Postlist","posts","setPosts","method","url","headers","then","res","data","console","log","catch","e","length","map","post","index","createdAt","format","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMG,KAAK,CAAC;AACRM,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,GAAG,EAAE,6BAFG;AAGRC,MAAAA,OAAO,EAAE;AACN,uCAA+B,GADzB;AAEN,wBAAgB;AAFV;AAHD,KAAD,CAAL,CAOHC,IAPG,CAOEC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,IAAJ,CAASP,KAAZ,EAAmB;AACf,YAAIA,KAAK,GAAGM,GAAG,CAACC,IAAJ,CAASP,KAArB;AAEAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,KAA9B;AACAC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,KAdK,EAcHU,KAdG,CAcGC,CAAC,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,CAAhC;AACH,KAhBK,CAAN;AAiBH,GAlBQ,EAkBN,CAACV,QAAD,CAlBM,CAAT;AAoBA,sBACI;AAAA,cACKD,KAAK,CAACY,MAAN,GAAeZ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAgB;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,mCAAoC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCAC1E;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,mCACI;AAAK,cAAA,GAAG,EAAC,sCAAT;AAAgD,cAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACI;AAAA,qCAAK;AAAG,gBAAA,IAAI,EAAC,gBAAR;AAAyB,gBAAA,KAAK,EAAC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wCAAkBpB,MAAM,CAACmB,IAAI,CAACE,SAAN,CAAN,CAAuBC,MAAvB,CAA8B,yBAA9B,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAQI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACI;AAAA,0BAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,GAAG,EAAC,gCAAT;AAA0C,cAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD0E,eAiB1E,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAjB0E;AAAA;AAAA;AAAA;AAAA;AAAA,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1B,CAAf,GAkBgB;AAnBrB,mBADJ;AAwBH,CA/CD;;GAAMnB,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport ReviewSection from './review-section.jsx';\r\nimport CommentSection from './comment-section.jsx'\r\n\r\nconst Postlist = () => {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        await axios({\r\n            method: \"GET\",\r\n            url: 'http://localhost:4000/post/',\r\n            headers: {\r\n               \"Access-Control-Allow-Origin\": \"*\",\r\n               'Content-Type': 'application/json'\r\n            },\r\n        }).then(res => {\r\n            if(res.data.posts) {\r\n                let posts = res.data.posts;\r\n                \r\n                console.log(\"client posts: \", posts);\r\n                setPosts(posts);\r\n            }\r\n        }).catch(e => {\r\n            console.log(\"Error occurred: \", e);\r\n        })\r\n    }, [setPosts])\r\n\r\n    return (\r\n        <>\r\n            {posts.length ? posts.map((post, index) =><div className=\"central-meta item\"> <div className=\"user-post\">\r\n                <div className=\"friend-info\">\r\n                    <figure>\r\n                        <img src=\"images/resources/friend-avatar10.jpg\" alt=\"\" />\r\n                    </figure>\r\n                    <div className=\"friend-name\">\r\n                        <ins><a href=\"time-line.html\" title=\"\">Janice Griffith</a></ins>\r\n                        <span>Published: {moment(post.createdAt).format('MMMM Do YYYY, h:mm:ss A')}</span>\r\n                    </div>\r\n                    <div className=\"post-meta\">\r\n                        <div className=\"description\">     \r\n                            <p>{post.description}</p>\r\n                        </div>\r\n                        <img src=\"images/resources/user-post.jpg\" alt=\"\" />\r\n                        <ReviewSection />\r\n                    </div>\r\n                </div>\r\n                <CommentSection />\r\n            </div> </div>) : null \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Postlist"]},"metadata":{},"sourceType":"module"}